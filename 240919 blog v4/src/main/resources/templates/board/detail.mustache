{{>layout/header}}


<div class="container p-5">

    <!-- 수정삭제버튼 -->
    {{#model.isOwner}}
        <div class="d-flex justify-content-end">
            <a href="/api/board/{{model.id}}/update-form" class="btn btn-warning me-1">수정</a>
            <form action="/api/board/{{model.id}}/delete" method="post">
                <button class="btn btn-danger">삭제</button>
            </form>
        </div>
    {{/model.isOwner}}

    <div class="d-flex justify-content-end">
        <b>작성자</b> : {{model.username}}
    </div>

    <!-- 게시글내용 -->
    <div>
        <h2><b>{{model.title}}</b></h2>
        <hr/>
        <div class="m-4 p-2">
            {{{model.content}}}
        </div>
    </div>

    <!-- 댓글 -->
    <div class="card mt-3">
        <!-- 댓글등록 -->
        <div class="card-body">
            <form>
                <input type="hidden" value="{{model.id}}" id="boardId">
                <textarea class="form-control" rows="2" id="comment"></textarea>
                <div class="d-flex justify-content-end">
                    <button onclick="saveReply()" type="button" class="btn btn-outline-primary mt-1">댓글등록</button>
                </div>
            </form>
        </div>

        <!-- 댓글목록 -->
        <div class="card-footer">
            <b>댓글리스트</b>
        </div>
        <div class="list-group" id="reply-box">
            {{#model.replies}}
            <!-- 댓글아이템 -->
            <div id="reply-{{id}}" class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex">
                    <div class="px-1 me-1 bg-primary text-white rounded">{{username}}</div>
                    <div>{{comment}}</div>
                </div>
                {{#isOwner}}
                        <button onclick="deleteReply('{{id}}')" type="button" class="btn">🗑</button>
                {{/isOwner}}
            </div>
            {{/model.replies}}
        </div>
    </div>
</div>

<script>

    // 1. 책임 -> 디자인에 데이터 바인딩
    function replyItem(reply){
        return `<div id="reply-${reply.id}" class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex">
                    <div class="px-1 me-1 bg-primary text-white rounded">${reply.username}</div>
                    <div>${reply.comment}</div>
                </div>
                <button onclick="deleteReply('${reply.id}')" type="button" class="btn">🗑</button>
            </div>`;
    }

    // 1. 책임 -> 통신해서 데이터 요청하고 응답받으면 CSR하기
    async function saveReply(){
        // 1. Reply 객체 만들기 (id로 찾아서)
        let reply = {
          comment: $("#comment").val(),
          boardId: $("#boardId").val()
        };

        // 2. fetch 요청하기
        let response = await fetch(`/api/reply`, {
            method: "post",
            body: JSON.stringify(reply),
            headers: {
                "Content-Type":"application/json; charset=utf-8"
            }
        });
        let responseBody = await response.json(); // DTO !!
        console.log(responseBody);
        // 3. CSR 하기
        $("#reply-box").prepend(replyItem(responseBody.body));
        $("textarea").val("");
    }

    // 1. 책임 -> 통신해서 데이터 요청하고 응답받으면 CSR하기
    async function deleteReply(id){
        // 1. header + body
        let response = await fetch(`/api/reply/${id}`, {
            method: "delete"
        });
        // 2. body (parsing)
        let responseBody = await response.json(); // 파싱
        if(response.ok){
            $(`#reply-${id}`).remove();
            //location.reload(); // F5
        }else{
            alert(responseBody.msg);
        }
    }
</script>

{{>layout/footer}}